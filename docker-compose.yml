version: '3.8'

services:
  backend:
    build: ./backend
    container_name: dummy-backend
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - FRONTEND_URL=http://localhost:3000
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:80
      - LOG_LEVEL=debug
      - JWT_SECRET=development-jwt-secret
    volumes:
      - ./backend/src:/app/src:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const req = http.request({hostname: 'localhost', port: 8080, path: '/health'}, (res) => process.exit(res.statusCode === 200 ? 0 : 1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dummy-network

  frontend:
    build: ./frontend
    container_name: dummy-frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_ENV=development
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dummy-network

networks:
  dummy-network:
    driver: bridge

# Development override - uncomment for live reloading
# You can create a docker-compose.override.yml for development-specific settings
