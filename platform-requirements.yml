# =====================================================================
# Platform Requirements for CI/CD Onboarding and Infrastructure
# =====================================================================
# This file declares the application's infrastructure needs, target
# environments, and Helm chart location. It is used by the automated
# onboarding script to generate ArgoCD deployment manifests.
# =====================================================================

# Section 1: Application Identity
# NEED TO SPECIFY A PRODUCTION/DEVELOPMENT BRANCH HERE
# ---------------------------------------------------------------------
app:
  name: "test-application"
  repoURL: "https://github.com/aryan-spanda/Test-Application.git"
  chartPath: "deploy/helm"
  type: "fullstack"
  team: "development-team"
  
# Section 1.1: Container Registry Configuration
# ---------------------------------------------------------------------
container:
  registry: "docker.io"
  organization: "aryanpola"
  image: "sample-application"

# Section 2: Target Environments
# ---------------------------------------------------------------------
environments:
  - dev
  - staging
  - production

# Section 2.1: GitOps Configuration
# ---------------------------------------------------------------------
gitops:
  targetBranch: "testing"
  tagPattern: "^testing-[0-9a-f]{7,8}$"
  updateStrategy: "newest-build"

# Section 3: Platform Module Requirements
# ---------------------------------------------------------------------
platform:
  modules:
    # --- Networking Modules ---
    vpc_networking: true              # Virtual private cloud (Required)
    external_load_balancer: true      # Public internet access
    internal_load_balancer: true      # Internal service communication
    firewall: true                    # Security rules and network policies
    ssl_termination: true             # HTTPS support

    # --- Observability Modules ---
    logging: true                     # Centralized logging
    monitoring: true                  # Observability stack (Prometheus/Grafana)
    metrics: true                     # Application metrics scraping

    # TODO
    # --- Core Services ---
    secrets_management: true          # Secret store integration

    # TODO
    # --- Optional Modules (Disabled for Test App) ---
    cdn: false                        # Content Delivery Network
    waf: false                        # Web Application Firewall
    service_mesh: false               # Advanced networking (Istio)
    backup: false                     # Automated backups
    disaster_recovery: false          # Multi-region failover

# =====================================================================
# NOTE: Application runtime configuration (replicas, image tags, CPU,
# memory, environment variables, etc.) is managed in the Helm chart's
# values files at deploy/helm/, NOT here.
# =====================================================================

# =====================================================================
# ENVIRONMENT RESOURCE ALLOCATION (PLATFORM MANAGED - DO NOT EDIT)
# =====================================================================
# The following resource allocations are managed by the platform team
# and cannot be modified by application developers. These are provided
# for informational purposes only.

# STAGING Environment Resources:
# frontend:
#   replicas: 1 (fixed)
#   resources:
#     cpu: "100m" (platform managed)
#     memory: "128Mi" (platform managed)
# backend:
#   replicas: 1 (fixed)
#   resources:
#     cpu: "200m" (platform managed)
#     memory: "256Mi" (platform managed)
# modules:
#   cdn: false (disabled in staging)
#   waf: false (disabled in staging)
#   backup: false (disabled in staging)
#   disaster_recovery: false (disabled in staging)

# PRODUCTION Environment Resources:
# frontend:
#   replicas: 3 (fixed)
#   resources:
#     cpu: "500m" (platform managed)
#     memory: "512Mi" (platform managed)
# backend:
#   replicas: 3 (fixed)
#   resources:
#     cpu: "1000m" (platform managed)
#     memory: "1Gi" (platform managed)
# modules:
#   waf: true (automatically enabled in production)
#   backup: true (automatically enabled in production)
#   monitoring: true (automatically enabled in production)
#   compliance_scanning: true (automatically enabled in production)

# =====================================================================
# RESOURCE SCALING REQUESTS
# =====================================================================
# If your application requires different resource allocations than the
# standard platform defaults shown above, please contact the platform
# team with:
# 1. Business justification for resource changes
# 2. Performance testing data supporting the request
# 3. Expected traffic/load patterns
# 
# Standard resource tiers available:
# - Small:  frontend(100m/128Mi), backend(200m/256Mi) - 1 replica
# - Medium: frontend(500m/512Mi), backend(1000m/1Gi) - 3 replicas  
# - Large:  Contact platform team for custom sizing
# =====================================================================
