apiVersion: apps/v1
kind: Deployment
metadata:
  name: dummy-backend
  namespace: dummy-app
  labels:
    app: dummy-backend
    component: backend
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dummy-backend
      component: backend
  template:
    metadata:
      labels:
        app: dummy-backend
        component: backend
        version: v1.0.0
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: backend
        image: ghcr.io/your-org/dummy-backend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: PORT
          value: "8080"
        - name: NODE_ENV
          value: "production"
        - name: FRONTEND_URL
          value: "https://dummy-app.spanda.local"
        - name: ALLOWED_ORIGINS
          value: "https://dummy-app.spanda.local,http://dummy-frontend-service"
        - name: LOG_LEVEL
          value: "info"
        - name: RATE_LIMIT_WINDOW_MS
          value: "900000"
        - name: RATE_LIMIT_MAX_REQUESTS
          value: "1000"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: dummy-backend-secrets
              key: jwt-secret
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: dummy-backend-secrets
              key: database-url
              optional: true
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "amd64"
        effect: "NoSchedule"
